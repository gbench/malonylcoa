我有一段时间序列xts格式的交易数据prices，prices的元素是每个交易日具体到每分钟成交价格，由于交易时间的开盘时间的连续，
prices 的时间索引是不连续的，首先，价格数据只在工作日才存在，其次，每个工作日，只在:
9:00-10:15，10:30-11:30, 13:00-15:00, 21:00-23:00 才进行交易。
请编写使用ggplot绘制出该prices的分时图。需要把各个价格时间进行连续显示，
也就是10:15的下一刻是10:30，11:30的下一刻是13:00，15:00 下一刻21:00，23:00的下一刻是次日的9:00。如果
今日是周一，次日就是本周周二，如果今日是周五，次日是下周一，其余依次类推。
# -------------------------------------------------------------------------------------------------------------------

partition <- \(line, delim=",") line |> strsplit(delim) |> unlist() # 切分
as.datetime <- partial(as.POSIXct, format="%H:%M:%S") # 时间分析
data <- sqlquery("select * from t_ma501_20241209") |> compute_kline() # K 线数据
interval <- "15 min" # 时间间隔
std.breaks <- "09:00:00,10:15:00;10:30:00,11:30:00;13:30:00,15:00:00;20:00:00,23:00:00" |> # 坐标刻度，标准时间刻度
  partition(delim=";") |> # 解析交易时段
  lapply(\(line, ps=compose(as.datetime, partition)(line), .interval=interval) seq(ps[1], ps[2], by=.interval)) |> # 提取交易标记点
  Reduce(c, init=as.POSIXct(character(0)), x=_) # Reduce 需要为init指定由初始类型，如果提供默认c()则会返回long型数据
dfm <- data["T09:00/T23:00"] |> (\(d, idx=index(d)) { # 剔除指定时间端的数据
  d[ ! (idx>as.datetime("15:00:00") & idx<as.datetime("21:00:00")) ]
})() #  数据范围

# 时间绘图
library(tidyverse) # 加载函数库，ggplot2 与 dplyr
ggplot(dfm, aes(seq_along(index(dfm)))) + # 基础数据
  geom_line(aes(y=Close)) + # 收盘价
  scale_x_continuous( # 自定义时间轴
    breaks=\(x) { # 需要保持与ggplot的基础映射x的相同的数据类型
      print(sprintf("breaks:%s(%d)", x, length(x)))
      tp <- c("10:15:00", "11:30:00", "15:00:00") |> as.datetime() # 连接时间点，交易时段的结尾时刻
      breaks <- std.breaks[-match(tp, std.breaks)] # 剔除掉省略掉的时间
      print(sprintf("breaks --> %s(%d)", breaks, length(breaks)))
      match(breaks, index(dfm)) |> na.omit() # 剔除NA值
    }, labels=\(x) { # 坐标id
      print(sprintf("labels:%s(%d)", x, length(x)))
      points <- index(dfm)[x] # 提取时间点数据的时间索引
      # 定义关键时间点
      p1030 <- as.datetime("10:30:00")
      p1330 <- as.datetime("13:30:00")
      p2100 <- as.datetime("21:00:00")
      lbls <- dplyr::case_when( # 时间刻度
         points == p1030 ~ "10:15/30", # 上午盘的时间交接点
         points == p1330 ~ "11/13:30:00", # 下午盘的时间交接点
         minute(points) == 0 & points == p2100 ~ "15/21:00", # 晚盘的时间交接点
         minute(points) == 0 ~ format(points, "%H:00"), # 默认整点时刻
         TRUE ~ sprintf("%02d", minute(points)) # 默认非整点时刻
      ) # 时间刻度
      print(sprintf("labels --> %s(%d)", lbls, length(lbls)))
      lbls
    }, limits=\(x) { # 刻度区间
      print(sprintf("limits:%s(%d)", x, length(x)))
      x
    }) + # 自定义时间轴
  labs(x = "时间", y = "收盘价格", title = "价格线图") # 坐标轴名称

# -------------------------------------------------------------------------------------------------------------------

partition <- \(line, delim=",") line |> strsplit(delim) |> unlist() # 切分
as.datetime <- partial(as.POSIXct, format="%H:%M:%S") # 时间分析
data <- sqlquery("select * from t_ma505_20241213") # 检索数据
data$UpdateTime <- as.datetime (data$UpdateTime) # 解析时间

# 时间段分割
# "09:00:00,10:15:00;10:30:00,11:30:00;13:30:00,15:00:00;20:00:00,23:00:00" |>
breaks <- "09:00:00,10:15:00;10:30:00,11:30:00" |>
  partition(delim=";") |> # 解析交易时段
  lapply(\(line, ps=compose(as.datetime, partition)(line), interval="15 min") seq(ps[1], ps[2], by=interval)) |> # 提取交易标记点
  Reduce(c, init=as.POSIXct(character(0)), x=_) # Reduce 需要为init指定由初始类型，如果提供默认c()则会返回long型数据
labels <- ifelse(minute(breaks)==0, format(breaks, "%H:00"), sprintf("%02d", minute(breaks)))

# 时间绘图
ggplot(data, aes(UpdateTime, LastPrice)) + geom_line() +
  scale_x_datetime(breaks=breaks, limits=range(breaks), labels=labels)