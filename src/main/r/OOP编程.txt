# ------------------------------------------------------------------------------------------
#  面向对象编程的方法实践
# ------------------------------------------------------------------------------------------

# R6 面向对象编程
library(R6) # R6Class 的面向对象编程示例

#' 创建一个R6Class的类对象
#'
#' 模仿C++,java 风格的类定义
#
#' @param clazzName 类名
#' @param env 结果类对象所存放的目标环境（名称空间）, 默认为 .GlobalEnv 全局环境
#' @param ... R6对象的定义属性列表
#' @return 一个R6Class的对象
#' @export
r6class <- \(clazzName, env=.GlobalEnv, ...) {
  cname <- substitute(clazzName) |> deparse() # 类名
  # 创建目标类对象并写入目标环境
  append( list(...), cname, 0 ) |> do.call(R6Class, args=_) |> 
    assign(x=cname, value=_, envir=env) # 以cname名称写入目标环境
  env[[cname]] # 返回结果值
}

#' 用户对象
#' 参考： https://zhuanlan.zhihu.com/p/359383772
r6class(User, 

 #' 对象私有成员
 private = list(
    
    #' 用户名称
    name=NULL,
    #' 用户密码
    password=123456
 ),
 
  #' 用户对象的公共成员
  public = list( 
    
    #' 构造函数: 初始化数据成员
    #' 在 R6 中公有成员的访问使用的是 self 对象来引用，而私有需要用 private 对象来引用
    #' @param name 用户姓名
    #' @param password 用户密码，默认为123456
    initialize = \(name=NULL, password=123456) {
      private$name <- name
      private$password <- password
   },
    
    #' 获得用户名称
    getName=\() private$name,
    
    #' 设置用户名称
    #' @param name 用户姓名
    setName=\(name) private$name <- name,

    #' 获得用户名称
    getPassword=\() private$password,
    
    #' 设置用户名称
    #' @param password 用户密码
    setPassword=\(password) private$password <- password
)) # User 用户对象

User$new("zhangsan") -> u # 创建对象
u$getName()
u$getPassword()

# 修改名称
u$setName('lisi')
u$getName()
u$getPassword()

# 克隆
u$clone() -> u2 # 克隆对象
u2$setName('wangwu')
u2$getName()
u$getName()
